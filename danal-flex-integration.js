// danal-flex-integration.js
// Îã§ÎÇ† Ï£ºÏãù Flex Î©îÏãúÏßÄ ÌÜµÌï© Î™®Îìà

const https = require('https');

// ÏÇ¨ÎÇ¥Îßù HTTPS ÏóêÏù¥Ï†ÑÌä∏
const agent = new https.Agent({
    rejectUnauthorized: false
});

class DanalFlexIntegration {
    constructor(webhookUrl = null, logger = console) {
        this.webhookUrl = webhookUrl;
        this.logger = logger;
        this.httpTimeout = 30000;
        
        // ÏïåÎ¶º ÏÉâÏÉÅ Ï†ïÏùò
        this.colors = {
            SURGE: '#FF4444',      // Í∏âÎì± - Îπ®Í∞ÑÏÉâ
            DROP: '#4444FF',       // Í∏âÎùΩ - ÌååÎûÄÏÉâ
            NEWS: '#8A2BE2',       // Îâ¥Ïä§ - Î≥¥ÎùºÏÉâ
            TECHNICAL: '#FF8C00',  // Í∏∞Ïà†Î∂ÑÏÑù - Ï£ºÌô©ÏÉâ
            PATTERN: '#32CD32',    // Ìå®ÌÑ¥ - Ïó∞ÎëêÏÉâ
            VOLUME: '#FFD700',     // Í±∞ÎûòÎüâ - Ìô©Í∏àÏÉâ
            WARNING: '#FFA500',    // Í≤ΩÍ≥† - Ï£ºÌô©ÏÉâ
            INFO: '#20B2AA',       // Ï†ïÎ≥¥ - Ï≤≠Î°ùÏÉâ
            SUCCESS: '#228B22',    // ÏÑ±Í≥µ - ÎÖπÏÉâ
            ERROR: '#DC143C'       // Ïò§Î•ò - ÏßÑÌôçÏÉâ
        };
    }

    // ÏõπÌõÖ URL ÏÑ§Ï†ï
    setWebhookUrl(url) {
        this.webhookUrl = url;
        this.logger.info && this.logger.info('Îã§ÎÇ† Flex ÏõπÌõÖ URL ÏÑ§Ï†ï', { url });
    }

    // Îã§ÎÇ† Ï£ºÍ∞Ä Í∏âÎì±/Í∏âÎùΩ ÏïåÎ¶º
    async sendPriceAlert(priceData, alertType = 'SURGE') {
        try {
            const color = alertType === 'SURGE' ? this.colors.SURGE : this.colors.DROP;
            const emoji = alertType === 'SURGE' ? 'üöÄ' : 'üìâ';
            const title = alertType === 'SURGE' ? 'Í∏âÎì±' : 'Í∏âÎùΩ';
            const changeText = priceData.changeRate > 0 ? `+${priceData.changeRate}%` : `${priceData.changeRate}%`;
            
            const flexMessage = {
                "type": "flex",
                "altText": `Îã§ÎÇ† Ï£ºÍ∞Ä ${title} ÏïåÎ¶º`,
                "contents": {
                    "type": "bubble",
                    "size": "kilo",
                    "header": {
                        "type": "box",
                        "layout": "vertical",
                        "contents": [
                            {
                                "type": "box",
                                "layout": "horizontal",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": `${emoji} Îã§ÎÇ† Ï£ºÍ∞Ä ${title}`,
                                        "weight": "bold",
                                        "size": "lg",
                                        "color": "#FFFFFF",
                                        "flex": 1
                                    },
                                    {
                                        "type": "text",
                                        "text": priceData.marketStatus === 'OPEN' ? 'üü¢ Ïû•Ï§ë' : 'üî¥ Ïû•Ïô∏',
                                        "size": "sm",
                                        "color": "#FFFFFF",
                                        "align": "end"
                                    }
                                ]
                            }
                        ],
                        "backgroundColor": color,
                        "paddingAll": "12px"
                    },
                    "body": {
                        "type": "box",
                        "layout": "vertical",
                        "contents": [
                            {
                                "type": "box",
                                "layout": "horizontal",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "ÌòÑÏû¨Í∞Ä",
                                        "size": "sm",
                                        "color": "#666666",
                                        "flex": 1
                                    },
                                    {
                                        "type": "text",
                                        "text": `${priceData.currentPrice.toLocaleString()}Ïõê`,
                                        "weight": "bold",
                                        "size": "lg",
                                        "color": "#333333",
                                        "align": "end"
                                    }
                                ],
                                "margin": "md"
                            },
                            {
                                "type": "box",
                                "layout": "horizontal",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "Î≥ÄÎèô",
                                        "size": "sm",
                                        "color": "#666666",
                                        "flex": 1
                                    },
                                    {
                                        "type": "text",
                                        "text": `${priceData.changeAmount > 0 ? '+' : ''}${priceData.changeAmount.toLocaleString()}Ïõê (${changeText})`,
                                        "weight": "bold",
                                        "size": "md",
                                        "color": priceData.changeRate > 0 ? "#FF4444" : "#4444FF",
                                        "align": "end"
                                    }
                                ],
                                "margin": "sm"
                            },
                            {
                                "type": "box",
                                "layout": "horizontal",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "Í≥†Í∞Ä/Ï†ÄÍ∞Ä",
                                        "size": "sm",
                                        "color": "#666666",
                                        "flex": 1
                                    },
                                    {
                                        "type": "text",
                                        "text": `${priceData.high.toLocaleString()} / ${priceData.low.toLocaleString()}`,
                                        "size": "sm",
                                        "color": "#333333",
                                        "align": "end"
                                    }
                                ],
                                "margin": "sm"
                            },
                            {
                                "type": "box",
                                "layout": "horizontal",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "Í±∞ÎûòÎüâ",
                                        "size": "sm",
                                        "color": "#666666",
                                        "flex": 1
                                    },
                                    {
                                        "type": "text",
                                        "text": `${priceData.volume.toLocaleString()}Ï£º`,
                                        "size": "sm",
                                        "color": "#333333",
                                        "align": "end"
                                    }
                                ],
                                "margin": "sm"
                            }
                        ],
                        "spacing": "sm",
                        "paddingAll": "12px"
                    },
                    "footer": {
                        "type": "box",
                        "layout": "vertical",
                        "contents": [
                            {
                                "type": "text",
                                "text": new Date().toLocaleString(),
                                "size": "xs",
                                "color": "#999999",
                                "align": "center"
                            }
                        ],
                        "paddingAll": "8px"
                    }
                }
            };

            return await this.sendFlexMessage(flexMessage);
            
        } catch (error) {
            this.logger.error && this.logger.error('Îã§ÎÇ† Í∞ÄÍ≤© ÏïåÎ¶º ÏÉùÏÑ± Ïã§Ìå®:', error.message);
            return false;
        }
    }

    // Îã§ÎÇ† Í∏∞Ïà†Ï†Å Î∂ÑÏÑù ÏïåÎ¶º
    async sendTechnicalAlert(analysisData, alertType = 'TECHNICAL') {
        try {
            const { type, title, message, data, severity } = analysisData;
            
            let color = this.colors.TECHNICAL;
            let emoji = 'üìä';
            
            // ÏïåÎ¶º Ïú†ÌòïÏóê Îî∞Î•∏ ÏÉâÏÉÅÍ≥º Ïù¥Î™®ÏßÄ ÏÑ§Ï†ï
            if (type.includes('BULLISH') || type.includes('GOLDEN')) {
                color = this.colors.SUCCESS;
                emoji = 'üü¢';
            } else if (type.includes('BEARISH') || type.includes('DEAD')) {
                color = this.colors.ERROR;
                emoji = 'üî¥';
            } else if (type.includes('OVERBOUGHT')) {
                color = this.colors.WARNING;
                emoji = '‚ö†Ô∏è';
            } else if (type.includes('OVERSOLD')) {
                color = this.colors.INFO;
                emoji = 'üíé';
            }

            const flexMessage = {
                "type": "flex",
                "altText": `Îã§ÎÇ† ${title}`,
                "contents": {
                    "type": "bubble",
                    "size": "kilo",
                    "header": {
                        "type": "box",
                        "layout": "vertical",
                        "contents": [
                            {
                                "type": "text",
                                "text": `${emoji} ${title}`,
                                "weight": "bold",
                                "size": "lg",
                                "color": "#FFFFFF"
                            },
                            {
                                "type": "text",
                                "text": `Ïã¨Í∞ÅÎèÑ: ${this.getSeverityText(severity)}`,
                                "size": "sm",
                                "color": "#FFFFFF",
                                "margin": "xs"
                            }
                        ],
                        "backgroundColor": color,
                        "paddingAll": "12px"
                    },
                    "body": {
                        "type": "box",
                        "layout": "vertical",
                        "contents": [
                            {
                                "type": "text",
                                "text": message,
                                "size": "md",
                                "color": "#333333",
                                "wrap": true,
                                "margin": "md"
                            }
                        ],
                        "paddingAll": "12px"
                    }
                }
            };

            // Í∏∞Ïà†Ï†Å ÏßÄÌëú ÏÉÅÏÑ∏ Ï†ïÎ≥¥ Ï∂îÍ∞Ä
            if (data) {
                const details = this.formatTechnicalData(data, type);
                if (details.length > 0) {
                    flexMessage.contents.body.contents.push({
                        "type": "separator",
                        "margin": "md"
                    });
                    
                    details.forEach(detail => {
                        flexMessage.contents.body.contents.push({
                            "type": "box",
                            "layout": "horizontal",
                            "contents": [
                                {
                                    "type": "text",
                                    "text": detail.label,
                                    "size": "sm",
                                    "color": "#666666",
                                    "flex": 1
                                },
                                {
                                    "type": "text",
                                    "text": detail.value,
                                    "size": "sm",
                                    "color": "#333333",
                                    "align": "end"
                                }
                            ],
                            "margin": "sm"
                        });
                    });
                }
            }

            // Ìë∏ÌÑ∞ Ï∂îÍ∞Ä
            flexMessage.contents.footer = {
                "type": "box",
                "layout": "vertical",
                "contents": [
                    {
                        "type": "text",
                        "text": `Í∏∞Ïà†Î∂ÑÏÑù ‚Ä¢ ${new Date().toLocaleString()}`,
                        "size": "xs",
                        "color": "#999999",
                        "align": "center"
                    }
                ],
                "paddingAll": "8px"
            };

            return await this.sendFlexMessage(flexMessage);
            
        } catch (error) {
            this.logger.error && this.logger.error('Îã§ÎÇ† Í∏∞Ïà†Î∂ÑÏÑù ÏïåÎ¶º ÏÉùÏÑ± Ïã§Ìå®:', error.message);
            return false;
        }
    }

    // Îã§ÎÇ† Ìå®ÌÑ¥ Î∂ÑÏÑù ÏïåÎ¶º
    async sendPatternAlert(patternData) {
        try {
            const { type, title, message, data } = patternData;
            
            let color = this.colors.PATTERN;
            let emoji = 'üìà';
            
            if (type.includes('REVERSAL_UP') || type.includes('BREAKOUT_UPWARD')) {
                color = this.colors.SUCCESS;
                emoji = 'üöÄ';
            } else if (type.includes('REVERSAL_DOWN') || type.includes('BREAKOUT_DOWNWARD')) {
                color = this.colors.ERROR;
                emoji = 'üìâ';
            } else if (type.includes('SUPPORT')) {
                color = this.colors.INFO;
                emoji = 'üõ°Ô∏è';
            } else if (type.includes('RESISTANCE')) {
                color = this.colors.WARNING;
                emoji = 'üöß';
            }

            const flexMessage = {
                "type": "flex",
                "altText": `Îã§ÎÇ† ${title}`,
                "contents": {
                    "type": "bubble",
                    "size": "kilo",
                    "header": {
                        "type": "box",
                        "layout": "vertical",
                        "contents": [
                            {
                                "type": "text",
                                "text": `${emoji} ${title}`,
                                "weight": "bold",
                                "size": "lg",
                                "color": "#FFFFFF"
                            }
                        ],
                        "backgroundColor": color,
                        "paddingAll": "12px"
                    },
                    "body": {
                        "type": "box",
                        "layout": "vertical",
                        "contents": [
                            {
                                "type": "text",
                                "text": message,
                                "size": "md",
                                "color": "#333333",
                                "wrap": true,
                                "margin": "md"
                            }
                        ],
                        "paddingAll": "12px"
                    },
                    "footer": {
                        "type": "box",
                        "layout": "vertical",
                        "contents": [
                            {
                                "type": "text",
                                "text": `Ìå®ÌÑ¥ Î∂ÑÏÑù ‚Ä¢ ${new Date().toLocaleString()}`,
                                "size": "xs",
                                "color": "#999999",
                                "align": "center"
                            }
                        ],
                        "paddingAll": "8px"
                    }
                }
            };

            return await this.sendFlexMessage(flexMessage);
            
        } catch (error) {
            this.logger.error && this.logger.error('Îã§ÎÇ† Ìå®ÌÑ¥ ÏïåÎ¶º ÏÉùÏÑ± Ïã§Ìå®:', error.message);
            return false;
        }
    }

    // Îã§ÎÇ† Ï¢ÖÌï© Î∂ÑÏÑù Î¶¨Ìè¨Ìä∏
    async sendComprehensiveReport(analysisData) {
        try {
            const { currentPrice, signals, overallScore, recommendation, patterns } = analysisData;
            
            let color = this.colors.INFO;
            let emoji = 'üìä';
            
            if (overallScore.sentiment.includes('BULLISH')) {
                color = this.colors.SUCCESS;
                emoji = 'üü¢';
            } else if (overallScore.sentiment.includes('BEARISH')) {
                color = this.colors.ERROR;
                emoji = 'üî¥';
            }

            const flexMessage = {
                "type": "flex",
                "altText": "Îã§ÎÇ† Ï¢ÖÌï© Í∏∞Ïà†Î∂ÑÏÑù Î¶¨Ìè¨Ìä∏",
                "contents": {
                    "type": "bubble",
                    "size": "giga",
                    "header": {
                        "type": "box",
                        "layout": "vertical",
                        "contents": [
                            {
                                "type": "text",
                                "text": `${emoji} Îã§ÎÇ† Ï¢ÖÌï© Î∂ÑÏÑù`,
                                "weight": "bold",
                                "size": "xl",
                                "color": "#FFFFFF"
                            },
                            {
                                "type": "text",
                                "text": `ÌòÑÏû¨Í∞Ä: ${currentPrice.toLocaleString()}Ïõê`,
                                "size": "md",
                                "color": "#FFFFFF",
                                "margin": "sm"
                            }
                        ],
                        "backgroundColor": color,
                        "paddingAll": "16px"
                    },
                    "body": {
                        "type": "box",
                        "layout": "vertical",
                        "contents": [
                            {
                                "type": "box",
                                "layout": "horizontal",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "Ï¢ÖÌï© Ï†êÏàò",
                                        "size": "md",
                                        "color": "#666666",
                                        "flex": 1
                                    },
                                    {
                                        "type": "text",
                                        "text": `${overallScore.score}Ï†ê (${overallScore.sentiment})`,
                                        "size": "md",
                                        "color": color,
                                        "weight": "bold",
                                        "align": "end"
                                    }
                                ],
                                "margin": "lg"
                            },
                            {
                                "type": "box",
                                "layout": "horizontal",
                                "contents": [
                                    {
                                        "type": "text",
                                        "text": "Ïã†Î¢∞ÎèÑ",
                                        "size": "sm",
                                        "color": "#666666",
                                        "flex": 1
                                    },
                                    {
                                        "type": "text",
                                        "text": overallScore.confidence,
                                        "size": "sm",
                                        "color": "#333333",
                                        "align": "end"
                                    }
                                ],
                                "margin": "sm"
                            }
                        ],
                        "spacing": "sm",
                        "paddingAll": "16px"
                    }
                }
            };

            // Ï£ºÏöî ÏãúÍ∑∏ÎÑê Ï∂îÍ∞Ä
            if (signals && Object.keys(signals).length > 0) {
                flexMessage.contents.body.contents.push({
                    "type": "separator",
                    "margin": "lg"
                });
                
                flexMessage.contents.body.contents.push({
                    "type": "text",
                    "text": "Ï£ºÏöî ÏãúÍ∑∏ÎÑê",
                    "size": "md",
                    "color": "#333333",
                    "weight": "bold",
                    "margin": "lg"
                });

                // RSI ÏãúÍ∑∏ÎÑê
                if (signals.rsi) {
                    flexMessage.contents.body.contents.push({
                        "type": "box",
                        "layout": "horizontal",
                        "contents": [
                            {
                                "type": "text",
                                "text": "RSI",
                                "size": "sm",
                                "color": "#666666",
                                "flex": 1
                            },
                            {
                                "type": "text",
                                "text": `${signals.rsi.value.toFixed(1)} (${this.getSignalEmoji(signals.rsi.signal)})`,
                                "size": "sm",
                                "color": "#333333",
                                "align": "end"
                            }
                        ],
                        "margin": "sm"
                    });
                }

                // MACD ÏãúÍ∑∏ÎÑê
                if (signals.macd) {
                    flexMessage.contents.body.contents.push({
                        "type": "box",
                        "layout": "horizontal",
                        "contents": [
                            {
                                "type": "text",
                                "text": "MACD",
                                "size": "sm",
                                "color": "#666666",
                                "flex": 1
                            },
                            {
                                "type": "text",
                                "text": `${this.getSignalEmoji(signals.macd.crossover)} ${signals.macd.crossover}`,
                                "size": "sm",
                                "color": "#333333",
                                "align": "end"
                            }
                        ],
                        "margin": "sm"
                    });
                }

                // Í±∞ÎûòÎüâ ÏãúÍ∑∏ÎÑê
                if (signals.volume) {
                    flexMessage.contents.body.contents.push({
                        "type": "box",
                        "layout": "horizontal",
                        "contents": [
                            {
                                "type": "text",
                                "text": "Í±∞ÎûòÎüâ",
                                "size": "sm",
                                "color": "#666666",
                                "flex": 1
                            },
                            {
                                "type": "text",
                                "text": `${signals.volume.ratio}Î∞∞ (${this.getSignalEmoji(signals.volume.signal)})`,
                                "size": "sm",
                                "color": "#333333",
                                "align": "end"
                            }
                        ],
                        "margin": "sm"
                    });
                }
            }

            // Ï∂îÏ≤ú Ïï°ÏÖò
            if (recommendation) {
                flexMessage.contents.body.contents.push({
                    "type": "separator",
                    "margin": "lg"
                });
                
                flexMessage.contents.body.contents.push({
                    "type": "text",
                    "text": "Ï∂îÏ≤ú Ïï°ÏÖò",
                    "size": "md",
                    "color": "#333333",
                    "weight": "bold",
                    "margin": "lg"
                });

                flexMessage.contents.body.contents.push({
                    "type": "text",
                    "text": `${this.getActionEmoji(recommendation.action)} ${recommendation.action}`,
                    "size": "lg",
                    "color": this.getActionColor(recommendation.action),
                    "weight": "bold",
                    "margin": "sm"
                });

                if (recommendation.reasons && recommendation.reasons.length > 0) {
                    recommendation.reasons.slice(0, 2).forEach(reason => {
                        flexMessage.contents.body.contents.push({
                            "type": "text",
                            "text": `‚Ä¢ ${reason}`,
                            "size": "xs",
                            "color": "#666666",
                            "wrap": true,
                            "margin": "xs"
                        });
                    });
                }
            }

            // Ìë∏ÌÑ∞ Ï∂îÍ∞Ä
            flexMessage.contents.footer = {
                "type": "box",
                "layout": "vertical",
                "contents": [
                    {
                        "type": "text",
                        "text": `Ï¢ÖÌï© Î∂ÑÏÑù ‚Ä¢ ${new Date().toLocaleString()}`,
                        "size": "xs",
                        "color": "#999999",
                        "align": "center"
                    }
                ],
                "paddingAll": "8px"
            };

            return await this.sendFlexMessage(flexMessage);
            
        } catch (error) {
            this.logger.error && this.logger.error('Îã§ÎÇ† Ï¢ÖÌï© Î¶¨Ìè¨Ìä∏ ÏÉùÏÑ± Ïã§Ìå®:', error.message);
            return false;
        }
    }

    // Flex Î©îÏãúÏßÄ Ï†ÑÏÜ°
    async sendFlexMessage(flexMessage) {
        try {
            if (!this.webhookUrl) {
                this.logger.warn && this.logger.warn('ÏõπÌõÖ URLÏù¥ ÏÑ§Ï†ïÎêòÏßÄ ÏïäÏùå');
                return false;
            }

            const payload = {
                text: flexMessage.altText,
                attachments: [
                    {
                        contentType: "application/vnd.line.flex",
                        content: flexMessage.contents
                    }
                ]
            };

            const { exec } = require('child_process');
            const util = require('util');
            const execPromise = util.promisify(exec);
            
            const curlCommand = `curl -k -s -X POST "${this.webhookUrl}" ` +
                               `-H "Content-Type: application/json" ` +
                               `-d '${JSON.stringify(payload).replace(/'/g, "'\"'\"'")}'`;

            const { stdout, stderr } = await execPromise(curlCommand);
            
            if (stderr && stderr.includes('error')) {
                throw new Error(`ÏõπÌõÖ Ï†ÑÏÜ° Ïò§Î•ò: ${stderr}`);
            }

            this.logger.info && this.logger.info('Îã§ÎÇ† Flex Î©îÏãúÏßÄ Ï†ÑÏÜ° ÏÑ±Í≥µ');
            return true;
            
        } catch (error) {
            this.logger.error && this.logger.error('Îã§ÎÇ† Flex Î©îÏãúÏßÄ Ï†ÑÏÜ° Ïã§Ìå®:', error.message);
            return false;
        }
    }

    // Ïú†Ìã∏Î¶¨Ìã∞ Î©îÏÜåÎìúÎì§
    getSeverityText(severity) {
        const severityMap = {
            'HIGH': 'ÎÜíÏùå üî¥',
            'MEDIUM': 'Î≥¥ÌÜµ üü°',
            'LOW': 'ÎÇÆÏùå üü¢'
        };
        return severityMap[severity] || severity;
    }

    getSignalEmoji(signal) {
        if (!signal) return '';
        
        const emojiMap = {
            'BULLISH': 'üü¢',
            'BEARISH': 'üî¥',
            'OVERBOUGHT': '‚ö†Ô∏è',
            'OVERSOLD': 'üíé',
            'NEUTRAL': 'üü°',
            'GOLDEN_CROSSOVER': '‚ú®',
            'DEAD_CROSSOVER': 'üíÄ',
            'BULLISH_CROSSOVER': 'üöÄ',
            'BEARISH_CROSSOVER': 'üìâ'
        };
        
        for (const [key, emoji] of Object.entries(emojiMap)) {
            if (signal.includes(key)) return emoji;
        }
        
        return '';
    }

    getActionEmoji(action) {
        const actionMap = {
            'BUY': 'üí∞',
            'SELL': 'üí∏',
            'HOLD': '‚úã'
        };
        return actionMap[action] || '';
    }

    getActionColor(action) {
        const colorMap = {
            'BUY': '#228B22',
            'SELL': '#DC143C',
            'HOLD': '#FF8C00'
        };
        return colorMap[action] || '#333333';
    }

    formatTechnicalData(data, type) {
        const details = [];
        
        try {
            if (type.includes('RSI') && typeof data.rsi === 'number') {
                details.push({
                    label: 'RSI Í∞í',
                    value: data.rsi.toFixed(1)
                });
            }
            
            if (type.includes('MACD') && data.macd) {
                details.push({
                    label: 'MACD',
                    value: data.macd.toFixed(4)
                });
            }
            
            if (type.includes('BOLLINGER') && data.position) {
                details.push({
                    label: 'Î∞¥Îìú ÏúÑÏπò',
                    value: `${(data.position * 100).toFixed(1)}%`
                });
            }
            
        } catch (error) {
            // Ïò§Î•ò Î¨¥Ïãú
        }
        
        return details;
    }
}

module.exports = DanalFlexIntegration;